


version: '3.8'

services:
  app:
    tty: true # to see the logs of the container
    volumes:
      - ./templates/conf.d/:/etc/nginx/templates # to mount the nginx configuration
      - ../:/var/www/html   # to mount the project files
    build:
      context: .
      dockerfile: Dockerfile.nginx  # to use the nginx dockerfile
    container_name: inventory_app   # to name the container
    ports:
      - "8080:80"   # to map the port 80 of the container to the port 8080 of the host
    environment:
      - NGINX_HOST=inventory_app.com  # to set the host name
      - NGINX_PORT=80
    depends_on:
      - php
    # networks:
    #     - nginxphp

  php:
    container_name: inventory_app_fpm1  # to name the container
    build:  # to build the image
      context: .
      dockerfile: Dockerfile.phplan   # to use the php dockerfile
    volumes:
      - ../:/var/www/html
      - ./phpenv/php/php.ini:/usr/local/etc/php/php.ini   # to mount the php configuration
    expose:
      - 9000
    tty: true
    depends_on:
      - db
  db:
    image: postgres:12.13-bullseye
    container_name: postgres_db
    volumes:
      - ../db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: inventory
      POSTGRES_USER: postgres

  pgadmin:
   image: dpage/pgadmin4
   environment:
      - PGADMIN_DEFAULT_EMAIL=pg@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
   ports:
        - "5050:80"

  sonarqube:
   image: sonarqube:community
   hostname: sonarqube
   container_name: sonarqube
   depends_on:
    - db
   environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: admin
   volumes:
      - ./sonarqube_dataðŸ˜•opt/sonarqube/data
      - ./sonarqube_extensionsðŸ˜•opt/sonarqube/extensions
      - ./sonarqube_logsðŸ˜•opt/sonarqube/logs
   ports:
      - "9001:9000"



